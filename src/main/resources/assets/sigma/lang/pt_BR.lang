psimisc.providerMod.Sigma=Sigma

#Datatype
psi.datatype.Boolean=Booleano

#Pieces
psi.spellpiece.booleanTrue=Booleano: Verdadeiro
psi.spellpiece.booleanTrue.desc=Constante verdadeiro
psi.spellpiece.booleanFalse=Booleano: False
psi.spellpiece.booleanFalse.desc=Constante falso
psi.spellpiece.booleanOperatorEquals=Booleano: Igual
psi.spellpiece.booleanOperatorEquals.desc=A == B (== C)
psi.spellpiece.booleanOperatorNotEquals=Booleano: Nao igual
psi.spellpiece.booleanOperatorNotEquals.desc=A != B (or A != C)
psi.spellpiece.booleanOperatorGreaterThan=Booleano: Maior que
psi.spellpiece.booleanOperatorGreaterThan.desc=A > B
psi.spellpiece.booleanOperatorGreaterThanOrEquals=Booleano: Maior ou igual
psi.spellpiece.booleanOperatorGreaterThanOrEquals.desc=A >= B
psi.spellpiece.booleanOperatorLessThan=Booleano: Menor que
psi.spellpiece.booleanOperatorLessThan.desc=A < B
psi.spellpiece.booleanOperatorLessThanOrEquals=Booleano: Menor ou igual
psi.spellpiece.booleanOperatorLessThanOrEquals.desc=A <= B
psi.spellpiece.booleanOperatorTernary=Booleano: Ternário
psi.spellpiece.booleanOperatorTernary.desc=A ? B : C
psi.spellpiece.booleanOperatorOr=Booleano: Ou
psi.spellpiece.booleanOperatorOr.desc=A || B (|| C)
psi.spellpiece.booleanOperatorAnd=Booleano: E
psi.spellpiece.booleanOperatorAnd.desc=A && B (&& C)
psi.spellpiece.booleanOperatorNot=Booleano: Não
psi.spellpiece.booleanOperatorNot.desc=Inverte booleano
psi.spellpiece.booleanOperatorPlayerShifting=Booleano: Conjurador esgueirando
psi.spellpiece.booleanOperatorPlayerShifting.desc=Se o conjurador está esgueirando

psi.spellpiece.castOperatorToNumber=Conversão: Para número
psi.spellpiece.castOperatorToNumber.desc=Converte objeto para número
psi.spellpiece.castOperatorToBoolean=Conversão: Para booleano
psi.spellpiece.castOperatorToBoolean.desc=0 ou qualquer objeto = true / outro número ou nulo = false
psi.spellpiece.castOperatorToVector=Conversão: Para vetor
psi.spellpiece.castOperatorToVector.desc=Converte objeto para vetor

psi.spellpiece.flowControlWhile=Fluxo: Laço Enquanto
psi.spellpiece.flowControlWhile.desc=Enquanto A for verdadeiro, executa o Truque. (Se C for verdadeiro, erros não irão parar o loop)
psi.spellpiece.flowControlFor=Fluxo: Laço Para
psi.spellpiece.flowControlFor.desc=Laço de 0(ou Número B) até Número A. (Se C for verdadeiro, erros não irão parar o loop)
psi.spellpiece.flowIf=Fluxo: Se
psi.spellpiece.flowIf.desc=Se Booleano C for verdadeiro, executa Truque A senão executa Truque B.
psi.spellpiece.flowSequence=Fluxo: Sequencia
psi.spellpiece.flowSequence.desc=Executa o Truque A e o Truque B, em sequencia.

psi.spellpiece.VariableForLoopIndex=Variável: Índice do Laço Para
psi.spellpiece.VariableForLoopIndex.desc=Pega o índice do "Laço Para" mais próximo.
psi.spellpiece.VariableGet=Variável: Pegar valor
psi.spellpiece.VariableGet.desc=Pega valor do índice
psi.spellpiece.VariableSet=Variável: Pôr valor
psi.spellpiece.VariableSet.desc=Põe o valor no índice
psi.spellpiece.ConstantNull=Constante: Nulo
psi.spellpiece.ConstantNull.desc=Valor nulo

#ParamName
viniciuslrangel.sigma.boolean1=Booleano A
viniciuslrangel.sigma.boolean2=Booleano B
viniciuslrangel.sigma.boolean3=Booleano C

psi.datatype.Object=Objeto
viniciuslrangel.sigma.object1=Objeto A
viniciuslrangel.sigma.object2=Objeto B
viniciuslrangel.sigma.object3=Objeto C

viniciuslrangel.sigma.piece1=Truque A
viniciuslrangel.sigma.piece2=Truque B
viniciuslrangel.sigma.piece3=Truque C

#Exception
viniciuslrangel.sigma.numberformatexception=Erro do formato do número
viniciuslrangel.sigma.infinityloopexception=Limite do laço

#Groups
psi.piecegroup.advancedFlowControl=Controle de Fluxo Avançado
psi.piecegroup.advancedFlowControl.desc=Adiciona laços controlados e outras funções que possibilitam você controlar a execução dos Truques.

psi.piecegroup.booleanSystem=Booleanos
psi.piecegroup.booleanSystem.desc=Você pode usar booleanos para comparar e processar valor para fazer truques mais específicos.

psi.piecegroup.variableSystem=Variáveis
psi.piecegroup.variableSystem.desc=Armazena valores para mantê-los dentro de laços.